CREATE DATABASE ecommerce_csharp;
GO

USE [ecommerce_csharp];

CREATE TABLE PERSON(
	id INT NOT NULL IDENTITY(1,1),
	name VARCHAR(120) NOT NULL,
	CONSTRAINT PK_PERSON_ID PRIMARY KEY(id),
);
GO

CREATE TABLE USER_TYPE(
	id INT NOT NULL IDENTITY(1,1),
	name VARCHAR(40) NOT NULL,
	CONSTRAINT PK_USER_TYPE_ID PRIMARY KEY(id),
);
GO

INSERT INTO USER_TYPE(name) VALUES('Client');
INSERT INTO USER_TYPE(name) VALUES('Operator');

CREATE TABLE [USER](
	id INT NOT NULL IDENTITY(1,1),
	id_person INT NOT NULL,
	id_type INT NOT NULL DEFAULT 1,
	username VARCHAR(36) NOT NULL,
	password VARCHAR(24) NOT NULL,
	CONSTRAINT PK_USER_ID PRIMARY KEY(id),
	CONSTRAINT FK_USER_PERSON_ID FOREIGN KEY(id_person) REFERENCES PERSON(id),
	CONSTRAINT FK_USER_TYPE_ID FOREIGN KEY(id_type) REFERENCES USER_TYPE(id),
);
GO

CREATE TABLE OPERATOR(
	id INT NOT NULL IDENTITY(1,1),
	id_user INT NOT NULL,
	is_administrator BIT NOT NULL DEFAULT 0,
	CONSTRAINT PK_OPERATOR_ID PRIMARY KEY(id),
	CONSTRAINT FK_OPERATOR_USER_ID FOREIGN KEY(id_user) REFERENCES [USER](id),
);
GO

CREATE TABLE CLIENT(
	id INT NOT NULL IDENTITY(1,1),
	id_user INT NOT NULL,
	cpf BIGINT NOT NULL,
	CONSTRAINT PK_CLIENT_ID PRIMARY KEY(id),
	CONSTRAINT FK_CLIENT_USER_ID FOREIGN KEY(id_user) REFERENCES [USER](id),
);
GO

CREATE TABLE [ADDRESS](
	id INT NOT NULL IDENTITY(1,1),
	name VARCHAR(80) NOT NULL,
	street VARCHAR(120) NOT NULL,
	number VARCHAR(20) NOT NULL,
	complement VARCHAR(20) DEFAULT '',
	observation VARCHAR(80) DEFAULT '',
	CONSTRAINT PK_ADRRESS_ID PRIMARY KEY(id),
);
GO

CREATE TABLE CLIENT_ADDRESSES(
	id INT NOT NULL IDENTITY(1,1),
	id_client INT NOT NULL,
	id_address INT NOT NULL,
	CONSTRAINT PK_CLIENT_ADDRESSES_ID PRIMARY KEY(id),
	CONSTRAINT FK_CLIENT_ADDRESSES_CLIENT_ID FOREIGN KEY(id_client) REFERENCES CLIENT(id),
	CONSTRAINT FK_CLIENT_ADDRESSES_ADDRESS_ID FOREIGN KEY(id_address) REFERENCES [ADDRESS](id),
);
GO

CREATE TABLE PAYMENT_METHOD(
	id INT NOT NULL IDENTITY(1,1),
	name VARCHAR(80) DEFAULT '',
	card_number BIGINT NOT NULL,
	expiration_date DATE NOT NULL,
	security_number INT NOT NULL,
	card_owner_name VARCHAR(120) NOT NULL,
	CONSTRAINT PK_PAYMENT_METHOD_ID PRIMARY KEY(id),
);
GO

CREATE TABLE CLIENT_PAYMENT_METHODS(
	id INT NOT NULL IDENTITY(1,1),
	id_client INT NOT NULL,
	id_payment_method INT NOT NULL,
	CONSTRAINT PK_CLIENT_PAYMENT_METHODS_ID PRIMARY KEY(id),
	CONSTRAINT FK_CLIENT_PAYMENT_METHODS_CLIENT_ID FOREIGN KEY(id_client) REFERENCES CLIENT(id),
	CONSTRAINT FK_CLIENT_PAYMENT_METHODS_PAYMENT_METHOD_ID FOREIGN KEY(id_payment_method) REFERENCES PAYMENT_METHOD(id),
);
GO

CREATE TABLE PROVIDER_TYPE(
	id INT NOT NULL IDENTITY(1,1),
	name VARCHAR(80) NOT NULL,
	CONSTRAINT PK_PROVIDER_TYPE_ID PRIMARY KEY(id),
);
GO

INSERT INTO PROVIDER_TYPE(name) VALUES('Fisical');
INSERT INTO PROVIDER_TYPE(name) VALUES('Legal');

CREATE TABLE [PROVIDER](
	id INT NOT NULL IDENTITY(1,1),
	id_person INT NOT NULL,
	id_type INT NOT NULL,
	registry_identification VARCHAR(20),
	CONSTRAINT PK_PROVIDER_ID PRIMARY KEY(id),
	CONSTRAINT FK_PROVIDER_PERSON_ID FOREIGN KEY(id_person) REFERENCES PERSON(id),
	CONSTRAINT FK_PROVIDER_TYPE_ID FOREIGN KEY(id_type) REFERENCES PROVIDER_TYPE(id),
);
GO

CREATE TABLE PRODUCT_CATEGORY(
	id INT NOT NULL IDENTITY(1,1),
	name VARCHAR(80) NOT NULL,
	CONSTRAINT PK_PRODUCT_CATEGORY_ID PRIMARY KEY(id),
);
GO

CREATE TABLE PRODUCT(
	id INT NOT NULL IDENTITY(1,1),
	name VARCHAR(120) NOT NULL,
	id_category INT NOT NULL,
	id_provider INT NOT NULL,
	price DECIMAL(10,2) NOT NULL,
	CONSTRAINT PK_PRODUCT_ID PRIMARY KEY(id),
	CONSTRAINT FK_PRODUCT_CATEGORY_ID FOREIGN KEY(id_category) REFERENCES PRODUCT_CATEGORY(id),
	CONSTRAINT FK_PRODUCT_PROVIDER_ID FOREIGN KEY(id_provider) REFERENCES [PROVIDER](id),
);
GO

CREATE TABLE PRODUCT_TRANSACTION_TYPE(
	id INT NOT NULL IDENTITY(1,1),
	name VARCHAR(120) NOT NULL,
	CONSTRAINT PK_PRODUCT_TRANSACTION_TYPE_ID PRIMARY KEY(id),
);
GO

INSERT INTO PRODUCT_TRANSACTION_TYPE(name) VALUES('PURCHASE');
INSERT INTO PRODUCT_TRANSACTION_TYPE(name) VALUES('SALE');

CREATE TABLE FINANCIAL(
	id INT NOT NULL IDENTITY(1,1),
	discount INT DEFAULT 0,
	product_price DECIMAL(10,2) NOT NULL,
	product_discount_price AS (product_price * (discount / 100)) - product_price,
	quantity INT NOT NULL,
	final_value AS ((product_price * (discount / 100)) - product_price) * quantity,
	date DATE NOT NULL DEFAULT GETDATE(),
	CONSTRAINT PK_FINANCIAL_ID PRIMARY KEY(id),
);
GO

CREATE TABLE PRODUCT_TRANSACTION(
	id INT NOT NULL IDENTITY(1,1),
	id_product INT NOT NULL,
	id_financial INT NOT NULL,
	id_client INT DEFAULT 0,
	id_provider INT DEFAULT 0,
	id_type INT NOT NULL,
	CONSTRAINT PK_PRODUCT_TRANSACTION_ID PRIMARY KEY(id),
	CONSTRAINT FK_PRODUCT_TRANSACTION_PRODUCT_ID FOREIGN KEY(id_product) REFERENCES PRODUCT(id),
	CONSTRAINT FK_PRODUCT_TRANSACTION_FINANCIAL_ID FOREIGN KEY(id_financial) REFERENCES FINANCIAL(id),
	CONSTRAINT FK_PRODUCT_TRANSACTION_CLIENT_ID FOREIGN KEY(id_client) REFERENCES CLIENT(id),
	CONSTRAINT FK_PRODUCT_TRANSACTION_PROVIDER_ID FOREIGN KEY(id_provider) REFERENCES [PROVIDER](id),
	CONSTRAINT FK_PRODUCT_TRANSACTION_TYPE_ID FOREIGN KEY(id_type) REFERENCES PRODUCT_TRANSACTION_TYPE(id),
);
GO

CREATE PROCEDURE CREATE_OPERATOR (@name VARCHAR(120), @username VARCHAR(36), @password VARCHAR(24), @is_administrator BIT) AS
BEGIN
	DECLARE @person TABLE(id INT); 
	DECLARE @user TABLE(id INT); 

	INSERT INTO PERSON(name) OUTPUT INSERTED.id INTO @person VALUES(@name);
	INSERT INTO [USER](id_person, id_type, username, password) OUTPUT INSERTED.id INTO @user VALUES((SELECT id FROM @person), 2, @username, @password);
	INSERT INTO OPERATOR(id_user, is_administrator) VALUES ((SELECT id FROM @user), @is_administrator);
END
GO

EXEC CREATE_OPERATOR 'Administrador', 'admin', 'admin', 1;
GO

CREATE PROCEDURE SystemLogin (@username VARCHAR(36), @password VARCHAR(24)) AS
BEGIN
	DECLARE @id_user INT = 0;

	SET @id_user = (SELECT id FROM [USER] WHERE username = @username AND password = @password);

	IF (@id_user != 0) BEGIN
		RETURN 1;
	END

	RETURN 0;
END
GO

